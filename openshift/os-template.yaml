apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: simple-spring-app-template
###########
# params
###########          
parameters:
- name: APP_NAME
  generate: expression
  from: "simple-spring-app-[0-9]{2}"
- name: PROJECT_NAME
  generate: expression
  from: "java-demo"
- name: MONGODB_USER
  generate: expression
  from: "mongodb"
- name: MONGODB_PASSWORD
  generate: expression
  from: "mongodb"
- name: MONGODB_ADMIN_PASSWORD
  generate: expression
  from: "mongodb"
objects:
###########
# buildConfig
###########
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/wojtus/openshift-demo.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: springboot-maven3-centos:latest
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange      
  status:
    lastVersion: 0
###########
# ImageStreams
###########    
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: springboot-maven3-centos
  spec:
    dockerImageRepository: codecentric/springboot-maven3-centos
###########
# DeploymentConfig
###########    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
          component: webserver          
      spec:
        containers:
        - image: docker-registry.default.svc:5000/${PROJECT_NAME}/${APP_NAME}:latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          env:
            - name: MONGODB_USER
              value: ${MONGODB_USER}
            - name: MONGODB_PASSWORD
              value: ${MONGODB_PASSWORD}
            - name: MONGODB_HOST
              value: ${APP_NAME}-mongodb
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_DATABASE
              value: ${APP_NAME}           
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /alive
              port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 1              
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
          namespace: ${PROJECT_NAME}
      type: ImageChange
###########      
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-mongodb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-mongodb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          component: mongodb
          deploymentconfig: ${APP_NAME}-mongodb      
      spec:
        containers:
        - image: centos/mongodb-32-centos7:latest
          name: ${APP_NAME}-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          env:
            - name: MONGODB_USER
              value: ${MONGODB_USER}
            - name: MONGODB_PASSWORD
              value: ${MONGODB_PASSWORD}
            - name: MONGODB_ADMIN_PASSWORD
              value: ${MONGODB_ADMIN_PASSWORD}
            - name: MONGODB_DATABASE
              value: ${APP_NAME}                            
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval="quit()"              
              initialDelaySeconds: 30
              timeoutSeconds: 1
          livenessProbe:
            tcpSocket:
              port: 27017
              initialDelaySeconds: 15
              timeoutSeconds: 1              
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
###########
# Service
###########   
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}    
  spec:
    selector:                  
      component: webserver
    ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
###########     
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}-mongodb
    labels:
      app: ${APP_NAME}
  spec:
    selector:                  
      component: mongodb
    ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      protocol: TCP      
###########
# Route
###########     
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: 'true'
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}    
  spec:
    #host: ${APP_NAME}-{PROJECT_NAME}.192.168.42.85.nip.io
    to:
      kind: Service
      name: ${APP_NAME}      